<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="world" default="empty"/> 
    <arg name="paused" default="true"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    
    <param name="cmd_vel_file" 	value="$(find siar_plugins)/data/cmd_vel_file"/>
    <param name="vr_file" 	value="$(find siar_plugins)/data/vr_file"/>
    <param name="va_file" 	value="$(find siar_plugins)/data/va_file"/>

    <env name="GAZEBO_MODEL_PATH" value="$(find siar_gazebo)/models:$(optenv GAZEBO_MODEL_PATH)"/>

    <!--Spawn the Nodes to transform frames depth and image-->
  
    <arg name="pi/2" value="1.5707963267948966" />
    <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="front_middle_base_link2" 	args="$(arg optical_rotate) asusXtion_frontMiddle_link 	camera_link_front_middle" />  
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="front_right_base_link2" 	args="$(arg optical_rotate) asusXtion_frontRight_link 	camera_link_front_right "/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="front_left_base_link2" 	args="$(arg optical_rotate) asusXtion_frontLeft_link 	camera_link_front_left "/> -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="back_middle_base_link2"	args="$(arg optical_rotate) asusXtion_backMiddle_link 	camera_link_back_middle "/>
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="back_right_base_link2" 	args="$(arg optical_rotate) asusXtion_backRight_link 	camera_link_back_right" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="back_left_base_link2" 	args="$(arg optical_rotate) asusXtion_backLeft_link 	camera_link_back_left" 	/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="top_middle_base_link2" 	args="$(arg optical_rotate) asusXtion_topMiddle_link 	camera_link_top_middle" /> -->

    <!-- Spawn a empty world with parameter set (siar_model.world) for an appropriate performance-->
  
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find siar_gazebo)/worlds/siar_model.world"/>
      <arg name="paused" value="$(arg paused)"/>
      <!--arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="gui" value="$(arg gui)"/>
      <arg name="headless" value="$(arg headless)"/-->
      <arg name="debug" value="$(arg debug)"/>
    </include>

    <!-- Spawn the models into Gazebo -->
    <!-- Spawn SIAR -->
    <arg name="xS" default="10"/>
    <arg name="yS" default="-10"/>
    <arg name="zS" default="0"/>
    <arg name="rollS" default="0"/>
    <arg name="pitchS" default="0"/>
    <arg name="yawS" default="2.5"/>
    <node name="spawn_siar" pkg="gazebo_ros" type="spawn_model" args="-file $(find siar_gazebo)/models/siar_model/siar_mb.sdf -sdf -model siar_mb 
  	-x $(arg xS) -y $(arg yS) -z $(arg zS) 
	  -R $(arg rollS) -P $(arg pitchS) -Y $(arg yawS)" output="screen" />
    <!-- Spawn TOWER -->
    <arg name="xT" default="0"/>
    <arg name="yT" default="0"/>
    <arg name="zT" default="0"/>
    <arg name="rollT" default="0"/>
    <arg name="pitchT" default="0"/>
    <arg name="yawT" default="0"/>
    <node name="spawn_tower" pkg="gazebo_ros" type="spawn_model" args="-file $(find siar_gazebo)/models/tower_1/model.sdf -sdf -model tower
  	-x $(arg xT) -y $(arg yT) -z $(arg zT) 
	  -R $(arg rollT) -P $(arg pitchT) -Y $(arg yawT)" output="screen" />


    <!-- joy node -->
    <node respawn="true" pkg="joy" type="joy_node" name="joy" >
      <param name="dev" type="string" value="/dev/input/js0" />
      <param name="deadzone" value="0.12" />
    </node>

    <!-- siar_Joy -->
    <include file="$(find siar_plugins)/launch/siar_teleop_joy_simulation.launch" />
  
    <!-- Siar Controller node -->
    <include file="$(find siar_controller)/launch/siar_controller_simulation.launch" />
  
    <!-- Siar Costmap node -->
    <include file="$(find siar_costmap)/launch/siar_costmap_simulation.launch" />

</launch>